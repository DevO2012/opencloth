#summary Introducing OpenCloth.

= Introduction =

OpenCloth project has been initiated with a view that it may help beginners and researchers alike to implement the basic algothims for cloth simulation. It is not intended as another library that you can plugin into your game engine directly. Rather, you can learn from it and then implement a technique or two in you own game/physics engine.

While at the current initial stage, we are just releasing a bunch of source codes, later on, we will try to implement these in the form of a platform independent library.

= Details =

Current codes contain the complete implementations of
  # Explicit Euler integration
  # Implicit Euler integration
  # Implicit integration (Baraff & Witkin's model)
  # Semi-Implicit Euler integration (Simplectic Euler)
  # Verlet integration
  # Position based dynamics

== What is not offered in the current version ==
Currently, there is no collision detection/response other than the naive collision to the floor. 

== External dependencies ==
The codes depend on the freeglut, glew and glm libraries. These are not included with this project and you would need to download them separately.

== Understanding the code ==
If the code does not make sense, I would suggest a read of the SIGGRAPH course notes (Realtime Physics: www.matthiasmueller.info/realtimephysics/coursenotes.pdf ). 

For bug reports/suggestions/queries email to me at mova0002@e.ntu.edu.sg.

== To Do List ==
Some features that I will be adding soon.
  * Hierarchical position based dynamics
  * Collision detection and response
  * Demo application encapsulating all algorithms
  * Extend to OpenGL3.3 core profile
  * GPU implementations (CUDA / GLSL)
  * Shading and Texturing
  * Platform independent library (C++ class hierarchy)
  * Soft bodies (Tetrahedra/Hedahedra FEM)